{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFechGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBAAOO,KAAK,OAAQC,MAAQT,EAAYU,SAjBtB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAwB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAErC,OACI,sBAAKc,UAAW,2DAAhB,UACI,qBAAKC,IAAOf,EAAKgB,IAAKN,IACtB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCd,SAAEA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAoBvC,OAbAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAM,SAACC,GACJH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAKrB,CAACpB,IAEGqB,EDnB2BK,CAAa1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OACEoB,GAAW,mBAAGJ,UAAU,uBAAb,yBACb,qBAAKA,UAAU,YAAf,SAIQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAA+BA,GAAbA,EAAIC,aEbjCgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAE,sBAFjB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAiBA,IAC/B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADJA,Y,MCjBpC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cacb8596.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) =>{\n        setInputValue(e.target.value);\n    };\n\n    const handleSummit = ( e ) => {\n        e.preventDefault();\n        // console.log('Submit hecho');\n        if( inputValue.trim().length > 2 ){\n            setCategories( cats => [ inputValue, ...cats,] );\n            setInputValue('');\n        }\n        \n\n    };\n\n    return (\n        <form onSubmit = { handleSummit } >\n            <input type=\"text\"  value= {inputValue} onChange = { handleInputChange }   />  \n        </form>\n        \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n\n};\n","\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=MVdRpdmz6Us6Di2TzprksTEgDqlHmFDo`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id : img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return(gifs);\n\n};","import React from 'react';\n\nexport const GifGridItem = ( {id, title, url } ) => {\n\n    return (\n        <div className =\"card animate__animated animate__fadeIn animate__delay-2s\" >\n            <img src = {url} alt={title} ></img>\n            <p>{ title }</p>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFechGifs } from '../hooks/useFechGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( {category} ) => {\n\n    const { data:images, loading } =  useFechGifs( category );\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\n            { loading && <p className=\"animate__fadeOutLeft\" >Cargando...</p>}\n            <div className=\"card-grid\" >\n                \n                \n                {\n                    images.map( img => (\n                        <GifGridItem key={img.id} { ...img } />\n                    ))\n                }                \n                \n                \n            </div>\n        </>\n    )\n}\n\n// GifGrid.propTypes = {\n\n// }\n\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\n\nexport const useFechGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( ()  => {\n\n        getGifs(category)\n            .then( (imgs) => {\n                setState({\n                    data: imgs,\n                    loading:false\n                });\n            } )\n\n\n    }, [category] );\n\n    return state; // Regresa un objeto\n}","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = ( )=> {\n\n    const [categories, setCategories] = useState([ 'Dragon Ball Super' ]);\n\n    // const handleAdd =  ()=>{\n    //     // setCategories( [...categories, 'HunterXHunter'] );\n    //     setCategories( cats => [...cats, 'HunterXHunter'] );\n    // };\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory  setCategories = {setCategories} />\n            <hr></hr>\n            <ol>\n                {\n                    categories.map( category =>\n                        <GifGrid  \n                            key = { category }\n                            category = {category} \n                        />\n                        // <li key = { category }> { category } </li> \n                    )\n                }\n            </ol>\n        </>\n        \n    );\n\n};\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}